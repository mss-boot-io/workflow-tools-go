name: CI

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - 'v*'
    branches:
      - main
      - fix/workflow

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    strategy:
      matrix:
        os: [ linux, darwin, windows ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          cache: true
      - name: Run tests with coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARGOCD_URL: ${{ secrets.ARGOCD_URL }}
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
          ARGOCD_TEST_CLUSTER: ${{ secrets.ARGOCD_TEST_CLUSTER }}
          ARGOCD_TEST_NAMESPACE: ${{ secrets.ARGOCD_TEST_NAMESPACE }}
        run: |
          go test -coverprofile=coverage.txt -v ./...
          go tool cover -html=coverage.txt
      - name: New Artifact Dir
        run: mkdir artifact
      - name: Build ${{ matrix.os }}
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.os }}
          GOARCH: amd64
        run: |
          if [ ${GOOS} == windows ];then
            export app=workflow-tools.exe
          else
            export app=workflow-tools
          fi
          go build -o ${app} .
          tar -zcvf ${GOOS}_${GOARCH}.tar.gz ./${app}
          rm -rf ./${app}
          mv ${GOOS}_${GOARCH}.tar.gz artifact

      - name: Upload binary
        uses: actions/upload-artifact@v3
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          name: binary
          path: ${{ github.workspace }}/artifact
          if-no-files-found: error


  release:
    runs-on: ubuntu-latest
    #if: startsWith(github.ref, 'refs/tags/')
    needs: ci
    steps:
      - uses: actions/checkout@v3
      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: binary
          path: public/
      - name: Create Readme
        run: cp README.md public/

      - name: Check
        run: ls public/
#      - id: tag
#        if: startsWith(github.ref, 'refs/tags/')
#        env:
#          ref: ${{ github.ref }}
#        run: |
#          export tag=${ref##*/}
#          echo "{tag}=${tag}" >> $GITHUB_OUTPUT
#
#      - name: Release
#        if: startsWith(github.ref, 'refs/tags/')
#        uses: softprops/action-gh-release@v1
#        with:
#          files: |
#            bin/workflow-tools